# -*- coding: utf-8 -*-
"""Untitled31.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UUVq_H_6jopJhNOSAxVertWlsnu5420I
"""

pip install streamlit-authenticator

!pip install streamlit pyngrok

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import pandas as pd
# 
# # Load dataset
# df = pd.read_csv("air_quality_health_impact_data.csv")
# 
# # Show column names for debugging
# st.sidebar.subheader("📋 Dataset Columns")
# st.sidebar.write(df.columns.tolist())
# 
# # Replace 'FullName' with the actual patient name column in your dataset
# patient_column = 'FullName' if 'FullName' in df.columns else df.columns[0]  # fallback to 1st column
# 
# st.title("🩺 Electronic Health Report System")
# st.subheader("Doctor's Assistant Panel")
# 
# # Patient selector
# patient_list = df[patient_column].unique().tolist()
# selected_patient = st.selectbox("Select Patient", patient_list)
# 
# # Get patient data
# patient_data = df[df[patient_column] == selected_patient].iloc[0]
# 
# # Display patient details
# st.markdown("### 👤 Patient Details")
# st.write(patient_data)
# 
# # Smart diagnosis
# def diagnose(row):
#     aqi = row.get("AQI", 0)
#     pm25 = row.get("PM2_5", 0)
#     pm10 = row.get("PM10", 0)
#     score = row.get("HealthImpactScore", 0)
# 
#     if aqi > 120 or pm25 > 75 or pm10 > 100:
#         return "⚠️ High pollution – Possible risk of respiratory or cardiac issues."
#     elif score > 5:
#         return "⚠️ Moderate health impact – Monitor symptoms closely."
#     else:
#         return "✅ No major air-quality-related health risk detected."
# 
# # Diagnosis button
# if st.button("🩺 What's the problem?"):
#     result = diagnose(patient_data)
#     st.success(result)
#